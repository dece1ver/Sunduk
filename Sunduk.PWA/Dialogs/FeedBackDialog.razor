@inject ISnackbar Snackbar
@inject HttpClient http

<style>
    .feedback-form{
        width: 300px;
        margin-top: 12px
    }
</style>

<MudDialog>


    <DialogContent>
        <div class="ma-0" style="width:300px;overflow: auto;">
            <MudText Typo="Typo.body1" Align="Align.Left">
                Свяжитесь со мной по электронной почте <MudLink Typo="Typo.body1" Href="@("mailto:dece1ver@sunduk.one")">dece1ver@sunduk.one</MudLink> либо используйте 
                <MudLink Typo="Typo.body1" Href="https://localhost:7080/">форму обратной связи</MudLink>.
            </MudText>
        </div>
    </DialogContent>
    <DialogActions>
        @if (Status == "Progress")
        {
            <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="mx-4" />
        }
        <MudIconButton Icon="@Icons.Material.Filled.Send" Color="Color.Primary" OnClick="Submit"/>
    </DialogActions>
</MudDialog>
@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    public string Name { get; set; }
    public string Message { get; set; }
    public string Status { get; set; } = "None";


    async void Submit()
    {
        Snackbar.Add("Отправка через эту форму временно недоступна :с", Severity.Warning);
        //if (string.IsNullOrWhiteSpace(Name))
        //{
        //    Snackbar.Add("Имя не должно быть пустым!", Severity.Error);
        //}
        //else if (string.IsNullOrWhiteSpace(Message))
        //{
        //    Snackbar.Add("Сообщение не должно быть пустым!", Severity.Error);
        //}
        //else
        //{
        //    Status = "Progress";

        //    try
        //    {
        //        Status = await http.GetStringAsync($"https://api.sunduk.one/sendmessage|{WebUtility.UrlEncode(Encode(Name))}|{WebUtility.UrlEncode(Encode(Message))}");

        //        if (Status == "Ok")
        //        {
        //            MudDialog.Close(DialogResult.Ok(true));
        //            Snackbar.Add($"Сообщение отправлено!", Severity.Success);
        //        }
        //        else
        //        {
        //            Snackbar.Add($"Не удалось отправить сообщение.", Severity.Error);
        //        }
        //    }
        //    catch (Exception e)
        //    {
        //        Status = e.Message;
        //        Snackbar.Add($"Не удалось отправить сообщение.", Severity.Error);
        //    }
        //}
    }

    private string Encode(string message)
    {
        return message
            .Replace(@"/", "_")
            .Replace(@"\", "__")
            .Replace(@".", "___");
    }

}