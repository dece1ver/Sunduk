@inject Blazored.LocalStorage.ILocalStorageService localStorage

<MudDialog DisableSidePadding="true">
    <TitleContent>Редактор инструмента</TitleContent>
    <DialogContent>
        <div Style=@($"overflow-y: scroll; max-height: {100+100}px; width: {300+100}px;")>
            <MudSwipeArea OnSwipe="@OnSwipe">
                <MudTabs @ref="tabs" Elevation="0">
                    <MudTabPanel Text="Точение наружное" Style="font-size: x-small">
                        <MudTable Items="TurningExternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedTurningExternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Описание</MudTh>
                                <MudTh>Угол кромки</MudTh>
                                <MudTh>Радиус кромки</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Тип">@(context.Type == TurningExternalTool.Types.Bar ? "Проходной" : "Подрезной")</MudTd>
                                <MudTd DataLabel="Угол кромки">@context.Angle.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Радиус кромки">@context.Radius.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Тип">
                                    <MudSelect T="TurningExternalTool.Types" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="@context.Type" Required>
                                        <MudSelectItem Value="@TurningExternalTool.Types.Bar">Проходной</MudSelectItem>
                                        <MudSelectItem Value="@TurningExternalTool.Types.Face">Подрезной</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Угол кромки">
                                    <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Радиус кромки">
                                    <MudTextField @bind-Value="@context.Radius" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" Variant="Variant.Outlined" Margin="Margin.Dense" @bind-Value="@context.Hand" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddTurningExternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveTurningExternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Точение внутреннее" Style="font-size: x-small">
                        <MudTable Items="TurningInternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedTurningInternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Диаметр</MudTh>
                                <MudTh>Угол кромки</MudTh>
                                <MudTh>Радиус кромки</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Угол кромки">@context.Angle.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Радиус кромки">@context.Radius.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Диаметр">
                                    <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Угол кромки">
                                    <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Радиус кромки">
                                    <MudTextField @bind-Value="@context.Radius" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddTurningInternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveTurningInternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Канавки наружные" Style="font-size: x-small">
                        <MudTable Items="GroovingExternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedGroovingExternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Тип</MudTh>
                                <MudTh>Ширина</MudTh>
                                <MudTh>Привязка</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                @if (context.Type == GroovingExternalTool.Types.Grooving)
                                {<MudTd DataLabel="Тип">Канавочный</MudTd>}
                                @if (context.Type == GroovingExternalTool.Types.Cutting)
                                {<MudTd DataLabel="Тип">Отрезной</MudTd>}
                                @if (context.Type == GroovingExternalTool.Types.Blade)
                                {<MudTd DataLabel="Тип">Лезвие</MudTd>}
                                <MudTd DataLabel="Ширина">@context.Width.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Привязка">@(context.ZeroPoint == GroovingExternalTool.Point.Left ? "Как проходной" : "Как отрезной")</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Тип">
                                    <MudSelect T="GroovingExternalTool.Types" @bind-Value="@context.Type" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@GroovingExternalTool.Types.Grooving">Канавочный</MudSelectItem>
                                        <MudSelectItem Value="@GroovingExternalTool.Types.Cutting">Отрезной</MudSelectItem>
                                        <MudSelectItem Value="@GroovingExternalTool.Types.Blade">Лезвие</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Ширина">
                                    <MudTextField @bind-Value="@context.Width" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Привязка">
                                    <MudSelect T="GroovingExternalTool.Point" @bind-Value="@context.ZeroPoint" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@GroovingExternalTool.Point.Left">Как проходной</MudSelectItem>
                                        <MudSelectItem Value="@GroovingExternalTool.Point.Right">Как отрезной</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddGroovingExternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveGroovingExternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Канавки внутренние" Style="font-size: x-small">
                        <MudTable Items="GroovingInternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedGroovingInternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Диаметр</MudTh>
                                <MudTh>Ширина</MudTh>
                                <MudTh>Привязка</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Ширина">@context.Width.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Привязка">@(context.ZeroPoint == GroovingInternalTool.Point.Left ? "Как расточной" : "Как отрезной")</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Диаметр">
                                    <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Ширина">
                                    <MudTextField @bind-Value="@context.Width" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Привязка">
                                    <MudSelect T="GroovingInternalTool.Point" @bind-Value="@context.ZeroPoint" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@GroovingInternalTool.Point.Left">Как расточной</MudSelectItem>
                                        <MudSelectItem Value="@GroovingInternalTool.Point.Right">Как отрезной</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddGroovingInternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveGroovingInternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Резьбовые наружные" Style="font-size: x-small">
                        <MudTable Items="ThreadingExternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedThreadingExternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Шаг</MudTh>
                                <MudTh>Угол опорной пластины</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Шаг">@context.Pitch.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Угол опорной пластины">@context.Angle.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Шаг">
                                    <MudTextField @bind-Value="@context.Pitch" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Угол опорной пластины">
                                    <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddThreadingExternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveThreadingExternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Резьбовые внутренние" Style="font-size: x-small">
                        <MudTable Items="ThreadingInternalTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedThreadingInternalTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Диаметр</MudTh>
                                <MudTh>Шаг</MudTh>
                                <MudTh>Угол опорной пластины</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Шаг">@context.Pitch.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Угол опорной пластины">@context.Angle.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Диаметр">
                                    <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Шаг">
                                    <MudTextField @bind-Value="@context.Pitch" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Угол опорной пластины">
                                    <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddThreadingInternalTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveThreadingInternalTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Сверла" Style="font-size: x-small">
                        <MudTable Items="DrillingTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedDrillingTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Диаметр</MudTh>
                                <MudTh>Угол</MudTh>
                                <MudTh>Тип</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Угол">@context.Angle.ToPrettyString()</MudTd>
                                @if (context.Type == DrillingTool.Types.Solid)
                                {<MudTd DataLabel="Тип">Твердосплавное</MudTd>}
                                @if (context.Type == DrillingTool.Types.Insert)
                                {<MudTd DataLabel="Тип">С пластинами</MudTd>}
                                @if (context.Type == DrillingTool.Types.Tip)
                                {<MudTd DataLabel="Тип">С головкой</MudTd>}
                                @if (context.Type == DrillingTool.Types.HSS)
                                {<MudTd DataLabel="Тип">Быстрорез</MudTd>}
                                @if (context.Type == DrillingTool.Types.Center)
                                {<MudTd DataLabel="Тип">Центровочное</MudTd>}
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Диаметр">
                                    <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Угол">
                                    <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Тип">
                                    <MudSelect T="DrillingTool.Types" @bind-Value="@context.Type" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@DrillingTool.Types.Solid">Твердосплавное</MudSelectItem>
                                        <MudSelectItem Value="@DrillingTool.Types.Insert">С пластинами</MudSelectItem>
                                        <MudSelectItem Value="@DrillingTool.Types.Tip">С головкой</MudSelectItem>
                                        <MudSelectItem Value="@DrillingTool.Types.HSS">Быстрорез</MudSelectItem>
                                        <MudSelectItem Value="@DrillingTool.Types.Center">Центровочное</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>
                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddDrillingTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveDrillingTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                    <MudTabPanel Text="Метчики" Style="font-size: x-small">
                        <MudTable Items="TappingTools" ReadOnly="false" Hover="true" CanCancelEdit="false" @bind-SelectedItem="selectedTappingTool" Elevation="0">
                            <HeaderContent>
                                <MudTh>Позиция</MudTh>
                                <MudTh>Диаметр</MudTh>
                                <MudTh>Шаг</MudTh>
                                <MudTh>Тип</MudTh>
                                <MudTh>Исполнение</MudTh>
                            </HeaderContent>
                            <RowTemplate>
                                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                                <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
                                <MudTd DataLabel="Шаг">@context.Pitch.ToPrettyString()</MudTd>
                                @if (context.Type == TappingTool.Types.Cutting)
                                {<MudTd DataLabel="Тип">Нарезной</MudTd>}
                                @if (context.Type == TappingTool.Types.Forming)
                                {<MudTd DataLabel="Тип">Раскатник</MudTd>}
                                <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Rigth ? "Правое" : "Левое")</MudTd>
                            </RowTemplate>
                            <RowEditingTemplate>
                                <MudTd DataLabel="Позиция">
                                    <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
                                </MudTd>
                                <MudTd DataLabel="Диаметр">
                                    <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Шаг">
                                    <MudTextField @bind-Value="@context.Pitch" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
                                </MudTd>
                                <MudTd DataLabel="Тип">
                                    <MudSelect T="TappingTool.Types" @bind-Value="@context.Type" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                                        <MudSelectItem Value="@TappingTool.Types.Cutting">Нарезной</MudSelectItem>
                                        <MudSelectItem Value="@TappingTool.Types.Forming">Раскатник</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                                <MudTd DataLabel="Исполнение">
                                    <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Required>
                                        <MudSelectItem Value="@Tool.ToolHand.Rigth">Правое</MudSelectItem>
                                        <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
                                    </MudSelect>
                                </MudTd>
                            </RowEditingTemplate>
                        </MudTable>

                        <div class="mt-3 ml-0 mr-4 d-flex">
                            <div class="d-flex ml-auto align-center">
                                <MudIconButton Style="margin-right: 5px" Variant="Variant.Outlined" Color="Color.Primary" Icon="@Icons.Material.Outlined.AddCircleOutline" OnClick="AddTappingTool" />
                                <MudIconButton Variant="Variant.Outlined" Color="Color.Error" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="RemoveTappingTool" />
                            </div>
                        </div>
                    </MudTabPanel>

                </MudTabs>
            </MudSwipeArea>
        </div>
    </DialogContent>
    <DialogActions>
        <MudButtonGroup Class="mr-3" Variant="Variant.Outlined" OverrideStyles="false">
            <MudButton Variant="Variant.Outlined" Class="mr-1" OnClick="Cancel">Подвердить без сохранения</MudButton>
            <MudButton Color="Color.Primary" Variant="Variant.Outlined" Class="mr-1" OnClick="Submit">Подвердить и сохранить</MudButton>
        </MudButtonGroup>
        
    </DialogActions>
</MudDialog>


@code 
{
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }


    private List<Tool> _Tools;


    [Parameter]
    public List<Tool> Tools
    {
        get { return _Tools; }
        set
        {
            _Tools = value;
            _ = SetTools();
        }
    }

    private async Task SetTools()
    {
        await localStorage.SetItemAsync(nameof(TurningExternalTools), TurningExternalTools);
        await localStorage.SetItemAsync(nameof(TurningInternalTools), TurningInternalTools);
        await localStorage.SetItemAsync(nameof(GroovingExternalTools), GroovingExternalTools);
        await localStorage.SetItemAsync(nameof(GroovingInternalTools), GroovingInternalTools);
        await localStorage.SetItemAsync(nameof(ThreadingExternalTools), ThreadingExternalTools);
        await localStorage.SetItemAsync(nameof(ThreadingInternalTools), ThreadingInternalTools);
        await localStorage.SetItemAsync(nameof(DrillingTools), DrillingTools);
        await localStorage.SetItemAsync(nameof(TappingTools), TappingTools);
        await localStorage.SetItemAsync(nameof(SpecialTools), SpecialTools);
    }

    private TurningExternalTool selectedTurningExternalTool = null;
    private TurningInternalTool selectedTurningInternalTool = null;
    private GroovingExternalTool selectedGroovingExternalTool = null;
    private GroovingInternalTool selectedGroovingInternalTool = null;
    private ThreadingExternalTool selectedThreadingExternalTool = null;
    private ThreadingInternalTool selectedThreadingInternalTool = null;
    private DrillingTool selectedDrillingTool = null;
    private TappingTool selectedTappingTool = null;

    public List<TurningExternalTool> TurningExternalTools
    {
        get
        {
            List<TurningExternalTool> result = new();
            foreach (var item in Tools.Where(x => x is TurningExternalTool))
            {
                result.Add(item as TurningExternalTool);
            }
            return result;
        }
        set { }
    }

    public List<TurningInternalTool> TurningInternalTools
    {
        get
        {
            List<TurningInternalTool> result = new();
            foreach (var item in Tools.Where(x => x is TurningInternalTool))
            {
                result.Add(item as TurningInternalTool);
            }
            return result;
        }
        set { }
    }

    public List<GroovingExternalTool> GroovingExternalTools
    {
        get
        {
            List<GroovingExternalTool> result = new();
            foreach (var item in Tools.Where(x => x is GroovingExternalTool))
            {
                result.Add(item as GroovingExternalTool);
            }
            return result;
        }
        set { }
    }

    public List<GroovingInternalTool> GroovingInternalTools
    {
        get
        {
            List<GroovingInternalTool> result = new();
            foreach (var item in Tools.Where(x => x is GroovingInternalTool))
            {
                result.Add(item as GroovingInternalTool);
            }
            return result;
        }
        set { }
    }

    public List<ThreadingExternalTool> ThreadingExternalTools
    {
        get
        {
            List<ThreadingExternalTool> result = new();
            foreach (var item in Tools.Where(x => x is ThreadingExternalTool))
            {
                result.Add(item as ThreadingExternalTool);
            }
            return result;
        }
        set { }
    }

    public List<ThreadingInternalTool> ThreadingInternalTools
    {
        get
        {
            List<ThreadingInternalTool> result = new();
            foreach (var item in Tools.Where(x => x is ThreadingInternalTool))
            {
                result.Add(item as ThreadingInternalTool);
            }
            return result;
        }
        set { }
    }



    public List<DrillingTool> DrillingTools
    {
        get
        {
            List<DrillingTool> result = new();
            foreach (var item in Tools.Where(x => x is DrillingTool))
            {
                result.Add(item as DrillingTool);
            }
            return result;
        }
    }

    public List<TappingTool> TappingTools
    {
        get
        {
            List<TappingTool> result = new();
            foreach (var item in Tools.Where(x => x is TappingTool))
            {
                result.Add(item as TappingTool);
            }
            return result;
        }
    }

    public List<SpecialTool> SpecialTools
    {
        get
        {
            List<SpecialTool> result = new();
            foreach (var item in Tools.Where(x => x is SpecialTool))
            {
                result.Add(item as SpecialTool);
            }
            return result;
        }
    }

    private void AddTurningExternalTool() => Tools.Add(new TurningExternalTool(0101, TurningExternalTool.Types.Bar, 80, 0.8));
    private void RemoveTurningExternalTool() => Tools.Remove(TurningExternalTools[^1]);

    private void AddTurningInternalTool() => Tools.Add(new TurningInternalTool(0101, 25, 80, 0.8));
    private void RemoveTurningInternalTool() => Tools.Remove(TurningInternalTools[^1]);

    private void AddGroovingExternalTool() => Tools.Add(new GroovingExternalTool(0101, GroovingExternalTool.Types.Cutting, 3, GroovingExternalTool.Point.Left));
    private void RemoveGroovingExternalTool() => Tools.Remove(GroovingExternalTools[^1]);

    private void AddGroovingInternalTool() => Tools.Add(new GroovingInternalTool(0101, 20, 3, GroovingInternalTool.Point.Left));
    private void RemoveGroovingInternalTool() => Tools.Remove(GroovingInternalTools[^1]);

    private void AddThreadingExternalTool() => Tools.Add(new ThreadingExternalTool(0101, 1.5, 1));
    private void RemoveThreadingExternalTool() => Tools.Remove(ThreadingExternalTools[^1]);

    private void AddThreadingInternalTool() => Tools.Add(new ThreadingInternalTool(0101, 20, 1.5, 1));
    private void RemoveThreadingInternalTool() => Tools.Remove(ThreadingInternalTools[^1]);

    private void AddDrillingTool() => Tools.Add(new DrillingTool(0101, DrillingTool.Types.Solid, 10, 140));
    private void RemoveDrillingTool() => Tools.Remove(DrillingTools[^1]);

    private void AddTappingTool() => Tools.Add(new TappingTool(0101, TappingTool.Types.Cutting, 8, 1.25));
    private void RemoveTappingTool() => Tools.Remove(TappingTools[^1]);

    MudTabs tabs;

    public void OnSwipe(SwipeDirection direction)
    {
        if (direction == SwipeDirection.LeftToRight)
        {
            if (tabs.ActivePanelIndex > 0)
            {
                tabs.ActivatePanel(tabs.ActivePanelIndex - 1);
            }
        }
        else if (direction == SwipeDirection.RightToLeft)
        {
            if (tabs.ActivePanelIndex < 7)
            {
                tabs.ActivatePanel(tabs.ActivePanelIndex + 1);
            }
        }
    }

    void Submit()
    {
        _ = SetTools();
        MudDialog.Close(DialogResult.Ok(true));
    }
    void Cancel() => MudDialog.Cancel();
}