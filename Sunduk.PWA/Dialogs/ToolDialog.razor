<MudDialog>
    <TitleContent>@($"Tools: {Tools.Count} | Turning: {TurningExternalTools.Count} ")</TitleContent>
    <DialogContent>
        
        <MudTable Dense="true" Items="TurningExternalTools" ReadOnly="false" CanCancelEdit="false" @bind-SelectedItem="selectedTurningExternalTool">
            <ToolBarContent>
                <MudText Typo="Typo.h6">Инструмент для наружного точения</MudText>
            </ToolBarContent>
            <HeaderContent>
                <MudTh>Позиция</MudTh>
                <MudTh>Описание</MudTh>
                <MudTh>Угол кромки</MudTh>
                <MudTh>Радиус кромки</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
                <MudTd DataLabel="Описание">@context.Name</MudTd>
                <MudTd DataLabel="Угол кромки">@context.Angle.ToPrettyString()</MudTd>
                <MudTd DataLabel="Радиус кромки">@context.Radius.ToPrettyString()</MudTd>
            </RowTemplate>
            <RowEditingTemplate>
                <MudTd DataLabel="Позиция">
                    <MudTextField @bind-Value="@context.Position" Format="D4" Required />
                </MudTd>
                <MudTd DataLabel="Описание">
                    <MudSelect T="TurningExternalTool.Types" @bind-Value="@context.Type" Required>
                        <MudSelectItem Value="@TurningExternalTool.Types.Bar">Проходной</MudSelectItem>
                        <MudSelectItem Value="@TurningExternalTool.Types.Face">Подрезной</MudSelectItem>
                    </MudSelect>
                </MudTd>
                <MudTd DataLabel="Угол кромки">
                    <MudTextField @bind-Value="@context.Angle" Converter="converter" Required />
                </MudTd>
                <MudTd DataLabel="Радиус кромки">
                    <MudTextField @bind-Value="@context.Radius" Converter="converter" Required />
                </MudTd>
            </RowEditingTemplate>
        </MudTable>

    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Submit">Ok</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public List<Tool> Tools { get; set; }

    Converter<double> converter = new Converter<double>
    {
        SetFunc = value => value.ToPrettyString(),
        GetFunc = text => Util.GetDouble(text),
    };

    public List<TurningExternalTool> TurningExternalTools { get
        {
            List<TurningExternalTool> result = new();
            foreach (var item in Tools.Where(x => x is TurningExternalTool))
            {
                result.Add(item as TurningExternalTool);
            }
            return result;
        }
        set { }
    }

    private TurningExternalTool selectedTurningExternalTool = null;

    public List<DrillingTool> DrillingTools
    {
        get
        {
            List<DrillingTool> result = new();
            foreach (var item in Tools.Where(x => x is DrillingTool))
            {
                result.Add(item as DrillingTool);
            }
            return result;
        }
    }

    public List<TappingTool> TappingTools
    {
        get
        {
            List<TappingTool> result = new();
            foreach (var item in Tools.Where(x => x is TappingTool))
            {
                result.Add(item as TappingTool);
            }
            return result;
        }
    }

    public List<SpecialTool> SpecialTools
    {
        get
        {
            List<SpecialTool> result = new();
            foreach (var item in Tools.Where(x => x is SpecialTool))
            {
                result.Add(item as SpecialTool);
            }
            return result;
        }
    }


    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}