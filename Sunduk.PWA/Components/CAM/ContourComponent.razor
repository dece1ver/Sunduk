<MudField Label="Контур" Variant="Variant.Filled" Margin="Margin.Dense" DisableUnderLine="true">
    <MudList DisableGutters="true" Dense="true">
        @foreach (var element in Contour)
        {
            <MudListItem Dense="true">
                <MudPaper Outlined="true" Class="py-n2 my-n2">
                    <MudGrid Justify="Justify.FlexStart" Spacing=1>
                        @switch (element)
                        {
                            case Point point:
                            <MudItem>
                                <MudSelect T="ElementType" Value="ElementType.Point" Variant="FieldsVariant" Immediate="true" ReadOnly="true" OpenIcon="null"
                                Label="Тип" Margin="Margin.Dense" Style="width: 102px">
                                    <MudSelectItem T="ElementType" Value="ElementType.Point">Старт</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="point.X" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="X" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="point.Z" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="Z" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                                break;
                            case Line line:
                            <MudItem>
                                <MudSelect T="ElementType" Value="ElementType.Line" Variant="FieldsVariant" Immediate="true" ValueChanged="((type) => SetArc(Contour.IndexOf(line), type))"
                                Label="Тип" Margin="Margin.Dense" Style="width: 102px">
                                    <MudSelectItem T="ElementType" Value="ElementType.Line">Линия</MudSelectItem>
                                    <MudSelectItem T="ElementType" Value="ElementType.Arc">Дуга</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="line.X" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="X" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="line.Z" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="Z" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="line.Angle" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="A" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                                break;
                            case Arc arc:
                            <MudItem>
                                <MudSelect T="ElementType" Value="ElementType.Arc" Variant="FieldsVariant" Immediate="true" ValueChanged="((type) => SetLine(Contour.IndexOf(arc), type))"
                                Label="Тип" Margin="Margin.Dense" Style="width: 102px">
                                    <MudSelectItem T="ElementType" Value="ElementType.Line">Линия</MudSelectItem>
                                    <MudSelectItem T="ElementType" Value="ElementType.Arc">Дуга</MudSelectItem>
                                </MudSelect>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="arc.X" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="X" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="arc.Z" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="Z" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.NullableDoubleConverterWithZero"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="arc.Radius" Variant="FieldsVariant" Immediate="true"
                                AdornmentColor="Color.Dark" Adornment="Adornment.Start" Label="R" 
                                Margin="Margin.Dense" Style="width: 95px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                                break;
                        }
                        @if(Contour.IndexOf(element) > 0)
                        {
                            <MudItem>
                                <MudIconButton Style="margin-top: 3px; height: 40px; width: 40px" Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Remove" OnClick="(() => Contour.Remove(element))"/>
                            </MudItem>
                        }
                    </MudGrid>
                </MudPaper>
            </MudListItem>
        }
        <MudPaper Outlined="true">
            <MudListItem Dense="true" OnClick="(() => Contour.Add(new Line(null, null)))">
                <MudGrid Justify="Justify.Center">
                    <MudItem>
                        <MudIcon Class="mt-1 mb-n1" Icon="@Icons.Material.Filled.Add"/>
                    </MudItem>
                </MudGrid>
            </MudListItem>
        </MudPaper>
    </MudList>
</MudField>


@code {

    public Variant FieldsVariant { get; set; } = Variant.Outlined;

    public int ElementIndex { get; set; }

    public ElementType Type { get; set; }

    public enum ElementType
    {
        Point,
        Line,
        Arc
    }

    public List<Element> Contour { get; set; } = new List<Element>()
    {
        new Point(null, null),
    };

    private void SetArc(int index, ElementType type)
    {
        if (type is ElementType.Arc)
        {
            Contour[index] = new Arc(null, null, 0, Sunduk.PWA.Infrastructure.Direction.CCW);
        }
    }

    private void SetLine(int index, ElementType type)
    {
        if (type is ElementType.Line)
        {
            Contour[index] = new Line(null, null);
        }
    }
}
