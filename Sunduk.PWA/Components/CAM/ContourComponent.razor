<MudField Label="Контур" Variant="Variant.Filled" Margin="Margin.Dense">
    <MudList DisableGutters="true" Dense="true">
        @foreach (var element in Contour)
        {
            <MudListItem Dense="true">
                <MudPaper Outlined="true">
                    <MudGrid Justify="Justify.FlexStart" Spacing=1>
                        <MudItem>
                            <MudSelect T="ElementType" Variant="Variant.Outlined" @bind-Value="Type" Margin="Margin.Dense" Style="width:140px">
                                <MudSelectItem T="ElementType" Value="ElementType.Line">Линия</MudSelectItem>
                                <MudSelectItem T="ElementType" Value="ElementType.Arc">Дуга ПЧ</MudSelectItem>
                                <MudSelectItem T="ElementType" Value="ElementType.Arc">Дуга ПРЧ</MudSelectItem>
                            </MudSelect>
                        </MudItem>
                        @switch (element)
                        {
                            case Line line:
                            <MudItem>
                                <MudTextField @bind-Value="line.X" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="X" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="line.Z" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="Z" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="line.Angle" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="A" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                                break;
                            case Arc arc:
                            <MudItem>
                                <MudTextField @bind-Value="arc.X" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="X" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="arc.Z" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="Z" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                            <MudItem>
                                <MudTextField @bind-Value="arc.Radius" Variant="Variant.Outlined" Adornment="Adornment.Start" AdornmentText="R" Margin="Margin.Dense" Style="width: 105px" Converter="Util.DoubleConverter"/>
                            </MudItem>
                                break;
                        }
                        @*<MudItem>
                            <MudIconButton Variant="Variant.Outlined" Icon="@Icons.Material.Filled.Remove" OnClick="(() => Contour.Remove(element))"/>
                        </MudItem>*@
                    </MudGrid>
                </MudPaper>
            </MudListItem>
        }
        <MudField Variant=Variant.Outlined Margin="Margin.Dense">
            <MudListItem Dense="true" OnClick="(() => Contour.Add(new Line(0, 0)))">
                <MudField Variant="Variant.Filled" Margin="Margin.Dense" >
                    <MudText>Добавить</MudText>
                </MudField>
            </MudListItem>
        </MudField>
    </MudList>
</MudField>

@code {

    public List<Element> Contour { get; set; } = new List<Element>()
    {
        new Line(0, 0),
        new Line(6, 0),
        new Arc(6, 0, 3, Sunduk.PWA.Infrastructure.Direction.CCW),
        new Line(10, 2)
    };

    public ElementType Type { get; set; }

    public enum ElementType
    {
        Line,
        Arc
    }
}
