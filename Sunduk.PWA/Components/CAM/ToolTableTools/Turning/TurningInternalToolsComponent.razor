@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<MudTable Items="TurningInternalTools" ReadOnly="ReadOnly" Hover="true" CanCancelEdit="false" Elevation="0">
    <HeaderContent>
        <MudTh>Позиция</MudTh>
        <MudTh>Диаметр</MudTh>
        <MudTh>Угол кромки</MudTh>
        <MudTh>Радиус кромки</MudTh>
        <MudTh>Исполнение</MudTh>
        <MudTh/>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Позиция">@context.Position.ToolNumber()</MudTd>
        <MudTd DataLabel="Диаметр">@context.Diameter.ToPrettyString()</MudTd>
        <MudTd DataLabel="Угол кромки">@context.Angle.ToPrettyString()</MudTd>
        <MudTd DataLabel="Радиус кромки">@context.Radius.ToPrettyString()</MudTd>
        <MudTd DataLabel="Исполнение">@(context.Hand == Tool.ToolHand.Right ? "Правое" : "Левое")</MudTd>
        <MudTd>
            <MudIconButton Class="ma-n3" Variant="Variant.Text" Icon="@Icons.Material.Outlined.RemoveCircleOutline" OnClick="(() => RemoveTurningInternalTool(context))" />
        </MudTd>
    </RowTemplate>
    <RowEditingTemplate>
        <MudTd DataLabel="Позиция">
            <MudTextField @bind-Value="@context.Position" Variant="Variant.Outlined" Margin="Margin.Dense" Format="D4" Required />
        </MudTd>
        <MudTd DataLabel="Диаметр">
            <MudTextField @bind-Value="@context.Diameter" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
        </MudTd>
        <MudTd DataLabel="Угол кромки">
            <MudTextField @bind-Value="@context.Angle" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
        </MudTd>
        <MudTd DataLabel="Радиус кромки">
            <MudTextField @bind-Value="@context.Radius" Variant="Variant.Outlined" Margin="Margin.Dense" Converter="Util.DoubleConverter" Required />
        </MudTd>
        <MudTd DataLabel="Исполнение">
            <MudSelect T="Tool.ToolHand" @bind-Value="@context.Hand" Variant="Variant.Outlined" Margin="Margin.Dense" Required>
                <MudSelectItem Value="@Tool.ToolHand.Right">Правое</MudSelectItem>
                <MudSelectItem Value="@Tool.ToolHand.Left">Левое</MudSelectItem>
            </MudSelect>
        </MudTd>
    </RowEditingTemplate>
</MudTable>
<AddToolButton OnClick="AddTurningInternalTool" />
@code {
    [Parameter]
    public List<Tool> Tools { get; set; }

    [Parameter] 
    public EventCallback<List<Tool>> ToolsChanged { get; set; }

    [Parameter]
    public List<TurningInternalTool> TurningInternalTools { get; set; }

    [Parameter]
    public bool ReadOnly { get; set; }

    private async Task AddTurningInternalTool()
    {
        Tools.Add(new TurningInternalTool(0101, 25, 80, 0.8));
        await LocalStorage.SetItemAsync(nameof(TurningInternalTools), TurningInternalTools);
        await ToolsChanged.InvokeAsync(Tools);
    }
    private async Task RemoveTurningInternalTool(TurningInternalTool tool)
    {
        Tools.Remove(tool);
        await LocalStorage.SetItemAsync(nameof(TurningInternalTools), TurningInternalTools);
        await ToolsChanged.InvokeAsync(Tools);
    }
}
